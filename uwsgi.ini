[uwsgi]
# 引用 %(base)
base            = /home/path/static
## 基本配置
# 项目目录
chdir           = %(base)
# python 虚拟环境路径
home            = %(base)/venv
# 启动文件名称
module          = run
# application 实例的变量名
callable        = app

# master 模式 由一个进程管理所有子进程，杀死这个进程就会结束所有子进程
master          = true

# 进程数量 cpu*2
processes       = 4
# 线程 processes*2
threads         = 8
py-autoreload = 1  # py文件修改自动加载，热启动
buffer-size     = 32768
# 与 nginx 通信 ，只用设置地址即可，不用创建文件
socket          = %(base)/static.sock
# stats = %(base)/static.status
# 暂不清楚
# wsgi-file       = %(base)/run.py

# 赋予socket文件权限
chmod-socket    = 666

# plugins         = python3
# 在 app 中创建进程
enable-threads 	= true
# 退出服务清理环境，unix socket and pid
vacuum          = true

# 保存 pid 号，kill 的时候方便查看
pidfile = %(base)/pid

## 处理(超时/请求/进程结束/虚拟内存)
# 平滑重启最大等待时间
reload-mercy 	= 8
# 请求超过60s就会失败
harakiri        = 60
# 进程内存占用不得高于 256M
limit-as        = 256 
# 最大进程请求数
max-requests 	= 5000 
# socket 监听队列大小
listen          = 120

## 日志
# 后台运行，日志保存到文件，文件夹必须创建，文件不用
daemonize       = %(base)/log/static_uwsgi.log
# 不记录请求，只记录错误及 uwsgi 内部错误
disable-logging = true
# 50M 切割日志文件
log-maxsize     = 50000000
